// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package it.crinali.www.archprot.web;

import it.crinali.www.archprot.domain.Contatto;
import it.crinali.www.archprot.domain.Document;
import it.crinali.www.archprot.domain.Progetto;
import it.crinali.www.archprot.domain.Struttura;
import it.crinali.www.archprot.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Contatto, String> ApplicationConversionServiceFactoryBean.getContattoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<it.crinali.www.archprot.domain.Contatto, java.lang.String>() {
            public String convert(Contatto contatto) {
                return new StringBuilder().append(contatto.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, Contatto> ApplicationConversionServiceFactoryBean.getIdToContattoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, it.crinali.www.archprot.domain.Contatto>() {
            public it.crinali.www.archprot.domain.Contatto convert(java.lang.Long id) {
                return Contatto.findContatto(id);
            }
        };
    }
    
    public Converter<String, Contatto> ApplicationConversionServiceFactoryBean.getStringToContattoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, it.crinali.www.archprot.domain.Contatto>() {
            public it.crinali.www.archprot.domain.Contatto convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Contatto.class);
            }
        };
    }
    
    public Converter<Document, String> ApplicationConversionServiceFactoryBean.getDocumentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<it.crinali.www.archprot.domain.Document, java.lang.String>() {
            public String convert(Document document) {
                return new StringBuilder().append(document.getOggetto()).append(' ').append(document.getNumeroProtocollo()).append(' ').append(document.getNomeFile()).append(' ').append(document.getSize()).toString();
            }
        };
    }
    
    public Converter<Long, Document> ApplicationConversionServiceFactoryBean.getIdToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, it.crinali.www.archprot.domain.Document>() {
            public it.crinali.www.archprot.domain.Document convert(java.lang.Long id) {
                return Document.findDocument(id);
            }
        };
    }
    
    public Converter<String, Document> ApplicationConversionServiceFactoryBean.getStringToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, it.crinali.www.archprot.domain.Document>() {
            public it.crinali.www.archprot.domain.Document convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Document.class);
            }
        };
    }
    
    public Converter<Progetto, String> ApplicationConversionServiceFactoryBean.getProgettoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<it.crinali.www.archprot.domain.Progetto, java.lang.String>() {
            public String convert(Progetto progetto) {
                return new StringBuilder().append(progetto.getDescrizione()).toString();
            }
        };
    }
    
    public Converter<Long, Progetto> ApplicationConversionServiceFactoryBean.getIdToProgettoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, it.crinali.www.archprot.domain.Progetto>() {
            public it.crinali.www.archprot.domain.Progetto convert(java.lang.Long id) {
                return Progetto.findProgetto(id);
            }
        };
    }
    
    public Converter<String, Progetto> ApplicationConversionServiceFactoryBean.getStringToProgettoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, it.crinali.www.archprot.domain.Progetto>() {
            public it.crinali.www.archprot.domain.Progetto convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Progetto.class);
            }
        };
    }
    
    public Converter<Struttura, String> ApplicationConversionServiceFactoryBean.getStrutturaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<it.crinali.www.archprot.domain.Struttura, java.lang.String>() {
            public String convert(Struttura struttura) {
                return new StringBuilder().append(struttura.getDescrizione()).toString();
            }
        };
    }
    
    public Converter<Long, Struttura> ApplicationConversionServiceFactoryBean.getIdToStrutturaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, it.crinali.www.archprot.domain.Struttura>() {
            public it.crinali.www.archprot.domain.Struttura convert(java.lang.Long id) {
                return Struttura.findStruttura(id);
            }
        };
    }
    
    public Converter<String, Struttura> ApplicationConversionServiceFactoryBean.getStringToStrutturaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, it.crinali.www.archprot.domain.Struttura>() {
            public it.crinali.www.archprot.domain.Struttura convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Struttura.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getContattoToStringConverter());
        registry.addConverter(getIdToContattoConverter());
        registry.addConverter(getStringToContattoConverter());
        registry.addConverter(getDocumentToStringConverter());
        registry.addConverter(getIdToDocumentConverter());
        registry.addConverter(getStringToDocumentConverter());
        registry.addConverter(getProgettoToStringConverter());
        registry.addConverter(getIdToProgettoConverter());
        registry.addConverter(getStringToProgettoConverter());
        registry.addConverter(getStrutturaToStringConverter());
        registry.addConverter(getIdToStrutturaConverter());
        registry.addConverter(getStringToStrutturaConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
